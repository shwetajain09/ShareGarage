c
User.find_by_id(params[:id])
User.find(params[:id])
params
@user
c
@user.avatar
@user
c
options[:google_id]
options.keys
options
c
options.keys
options.has_key?(:google_id)
options.key
options.values[0][:google_id]
options.values[0]
options.values[:google_id]
options.values
options
options.values
options.methods
options
options[:google_id]
options
c
l = (local_assigns.has_key? :action) ? action : :get
(local_assigns.has_key? :action) ? action : :get
local_assigns.has_key? :action ? action : :get
action
local_action = local_assigns.has_key? :action ? action : :get
c
local_assigns.has_key? :action
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
@book.present?
c
params
c
 @errors = @user.errors.full_messages
 @errors = @user.errors.full_message.join(',')
c
params
request
params
resource
c
@books.first.average_rating
@books.first.methods
@books.first.rating
@books.first
@books
c
params
c
book
Tagging.all
Taggings.all
User.all
Tag.all
@book.tags << 'Music'
@book.categories
@book = Book.first
book.categories
book.me
book.category
book
book = GoogleBooks.search("id:#{params[:google_id]}").first
@book
c
self.create_profile(:location_id => loc.id)
Profile.all
self.create_profile(:location_id => loc)
loc = Location.find_by_name(AppConfiguration::DEFAULT_LOCATION)
c
book.tags
book.categories
book
c
current_user.books_users
current_user.books_users.find_or_initialize_by(:book_id => book.id)
book_user
c
book_user
book_user.errors
book_user.save
book_user.locations << loc
book_user.locations.destroy_all
book_user.locations
book_user.locations << loc.collect(&:parent).uniq
book_user.locations << loc
book_user.save
c
book_user.save
book_user.errors
book_user.errors.full_messages.join(',')
book_user.save
book_user.errors.full_messages.join(',')
@error
@errors
c
loc.collect(&:parent).uniq
loc.collect(&:parent)
loc
loc.parent.uniq
book_user.locations << loc
loc = Location.include(&:parent).where('id in (?)',params[:location_ids]).uniq
book_user.locations.destroy_all
book_user.locations
c
Location.includes(:parent).where('id in (?)',[1,2,3]).collect{|a| [a,a.parent]}
Location.includes(:parent).where('id in (?)',[1,2,3]).collect{|a| [a,a.parent])
Location.includes(:parent).where('id in (?)',[1,2,3]).collect{|a| [a,a.parent]).uniq
Location.includes(:parent).where('id in (?)',[1,2,3]).collect(&:parent).uniq
Location.includes(:parent).where('id in (?)',[1,2,3]).collect(&:parent)
Location.includes(:parent).where('id in (?)',params[:location_ids]).collect(&:parent)
Location.includes(:parent).where('id in (?)',params[:location_ids]).parent.name
Location.includes(:parent).where('id in (?)',params[:location_ids]).parent.methods
Location.includes(:parent).where('id in (?)',params[:location_ids]).parent
Location.includes(:parent).where('id in (?)',params[:location_ids]).parent.all
Location.includes(:parent).where('id in (?)',params[:location_ids]).parent
Location.includes(:parent).where('id in (?)',params[:location_ids]).uniq
book_user.locations
book_user.locations << Location.includes(:parent).where('id in (?)',params[:location_ids]).uniq
book_user.locations
book_user.locations.destroy_all
book_user.locations 
Location.includes(:parent).where('id in (?)',params[:location_ids])
Location.includes(:parent).where('id in (?)',params[:location_ids]).methods
Location.includes(:parent).where('id in (?)',params[:location_ids]).all
Location.includes(:parent).where('id in (?)',params[:location_ids]).count
Location.includes(:parent).where('id in (?)',params[:location_ids]).all
Location.where('id in (?)',params[:location_ids]).include(&:parent).count
Location.where('id in (?)',params[:location_ids]).includes(&:parent).count
Location.where('id in (?)',params[:location_ids]).includes(&:parents).count
Location.where('id in (?)',params[:location_ids]).includes(:&parent).count
Location.where('id in (?)',params[:location_ids]).includes(:&parents).count
Location.where('id in (?)',params[:location_ids]).includes(:parents).count
Location.where('id in (?)',params[:location_ids]).includes(:parents)
Location.where('id in (?)',params[:location_ids]).includes(:parents).uniq
Location.where('id in (?)',params[:location_ids]).includes(:parent).uniq
Location.where('id in (?)',params[:location_ids]).includes(:parent).count
Location.where('id in (?)',params[:location_ids]).includes(:parent)
Location.where('id in (?)',params[:location_ids]).include(:parent)
Location.where('id in (?)',params[:location_ids]).include(parent)
Location.where('id in (?)',params[:location_ids])
book_user.locations
book_user.locations << Location.where('id in (?)',params[:location_ids]).include(&:parent).uniq
book_user.locations.destroy_all
params[:location_ids]
c
params[:location_ids]
params
c
book_locations = current_user.shared_books.find_by_id(book_id).pick_locations.collect(&:id)
book = current_user.shared_books.find_by_id(book_id)
c
params[:location_ids].merge(current_user.profile.try(:location_id))
c
params[:location_ids]
c
current_user.present?
params[:format]
params
c
current_user.present?
c
book.authors
c
book.authors
c
book.authors
c
book.authors
book.author
book
c
current_user.profile.credit
c
current_user.shared_books.collect(&:id)
current_user.shared_books.find_by_id(book_id)
current_user.shared_bookscurrent_user.shared_books.find_by_id(book_id)
current_user.shared_books
book_id
c
Book.last
params
@book = Book.find_by_google_id(params[:google_id])
c
@book.errors
c
@book.errors
c
book = GoogleBooks.search("id:HvJaAAAAMAAJ").first
@books.first.id
@books.first
book = GoogleBooks.search("other_identifier:UOM:39015015357935").first
book = GoogleBooks.search("other_identifier:'UOM:39015015357935'").first
@books.first.other_identifier
@books.first.isbn
@books.first
@books = GoogleBooks.search("jungle")
book = GoogleBooks.search("isbn:#{params[:titl4]}").first
params
book = GoogleBooks.search("isbn:#{params[:title]}").first
book = GoogleBooks.search("isbn:#{params[:other_identifier]}").first
book = GoogleBooks.search("isbn:#{params[:isbn]}").first
c
book
c
params
c
params
params[:isbn]
c
book.preview_link
book.average_rating
book.categories
book.isbn_13
book.isbn_10
book.methods
book.isbn.presence || book.other_identifier
book.isbn
c
book.isbn
c
book.isbn
c
book.isbn
book
c
@books.first.other_identifier
@books.first.isbn_13
@books.first.isbn_10
@books.first.methods
@books.first.title
@books.first
